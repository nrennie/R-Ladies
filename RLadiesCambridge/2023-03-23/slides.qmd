---
title: "Custom colour scales for {ggplot2}"
subtitle: ""
author: "R Ladies Cambridge | 23rd March 2023"
footer: "Slides: nrennie.rbind.io/talks/rladies-cambridge-ggplot2-colours"
format:
  nrSlides-revealjs:
    embed-resources: true
    self-contained: true
    preview-links: true
---

## ðŸ‘© Nicola Rennie

```{r}
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| fig-align: center
#| fig-alt: "A lollipop chart with each point showing a different stage of the author's career."
library(nrBrand)
print.palette <- sprintf
nrBrand::timeline_plot()
```

```{r}
#| echo: false
#| eval: true
library(ggplot2)
lemurs <- read.csv("lemurs_small.csv")
lemurs$name <- stringr::str_wrap(lemurs$name, width = 12)
theme_set(theme_grey(base_size = 40) + 
            theme(legend.position = "bottom", 
                  legend.title = element_blank(),
                  legend.text = element_text(lineheight = 0.6),
                  axis.title = element_blank(),
                  axis.ticks = element_blank(),
                  legend.background = element_rect(
                    colour = "#F0F5F5", fill = "#F0F5F5"),
                  plot.background = element_rect(
                    colour = "#F0F5F5", fill = "#F0F5F5"), 
                  panel.background = element_rect(
                    colour = "#F0F5F5", fill = "#F0F5F5")))
```

## Aims

**To help you choose appropriate colours and make using them in {ggplot2} easier**

<br>

::: columns
::: {.column}

ðŸŽ¨ Working with colours in {ggplot2} <br>

ðŸŽ¨ Choosing effective, accessible colours <br>

ðŸŽ¨ Creating custom colour scales <br>

ðŸŽ¨ Some additional resources 

:::
::: {.column}

<p style="text-align:center;">
<img src="images/lemurs-dessert.gif" alt="Gif of lemurs eating dessert" width="70%">
</p>

:::
:::


# Plotting<br>with<br>lemurs! {background-image="images/lemur_bg.png" width="50%"}

## Start with a single colour...

```{r}
#| output-location: column-fragment
#| echo: true
#| fig-width: 7
#| fig-height: 6
#| code-line-numbers: "4"
#| fig-alt: "A bar chart showing number of lemurs. On the x-axis three species of lemurs are shown including the Crowned lemur, Gray mouse lemur, and Ring-tailed lemur. On the y-axis the count of the number of each species is shown. The number of lemurs ranges from just under 2500 for Crowned lemurs, to almost 12500 for Gray mouse lemurs. The number of Crowned lemurs is significantly lower than the other two species shown. The bars are coloured pink."
ggplot(lemurs, 
       aes(x = name,
           y = n)) +
  geom_col(fill = "#E30B5C") 
```

Data: [github.com/rfordatascience/tidytuesday](https://github.com/rfordatascience/tidytuesday/blob/master/data/2021/2021-08-24/readme.md)

## ...or colour by species instead!

```{r}
#| output-location: column-fragment
#| echo: true
#| fig-width: 7
#| fig-height: 6
#| code-line-numbers: "4"
#| fig-alt: "A bar chart showing number of lemurs. On the x-axis three species of lemurs are shown including the Crowned lemur, Gray mouse lemur, and Ring-tailed lemur. On the y-axis the count of the number of each species is shown. The number of lemurs ranges from just under 2500 for Crowned lemurs, to almost 12500 for Gray mouse lemurs. The number of Crowned lemurs is significantly lower than the other two species shown. The bars are coloured based on species."
ggplot(lemurs, 
       aes(x = name,
           y = n,
           fill = name)) +
  geom_col() 
```

## Let's change to a nicer palette...

```{r}
#| output-location: column-fragment
#| echo: true
#| fig-width: 7
#| fig-height: 6
#| code-line-numbers: "6"
#| fig-alt: "A bar chart showing number of lemurs. On the x-axis three species of lemurs are shown including the Crowned lemur, Gray mouse lemur, and Ring-tailed lemur. On the y-axis the count of the number of each species is shown. The number of lemurs ranges from just under 2500 for Crowned lemurs, to almost 12500 for Gray mouse lemurs. The number of Crowned lemurs is significantly lower than the other two species shown. The bars are coloured based on species."
ggplot(lemurs, 
       aes(x = name,
           y = n,
           fill = name)) +
  geom_col() +
  scale_fill_brewer(palette = "Dark2")
```

See [{paletteer}](https://emilhvitfeldt.github.io/paletteer/) for a collection of colour palette scales.

## ... our choose our own colours!

```{r}
#| output-location: column-fragment
#| echo: true
#| fig-width: 7
#| fig-height: 6
#| code-line-numbers: "6,7,8,9,10"
#| fig-alt: "A bar chart showing number of lemurs. On the x-axis three species of lemurs are shown including the Crowned lemur, Gray mouse lemur, and Ring-tailed lemur. On the y-axis the count of the number of each species is shown. The number of lemurs ranges from just under 2500 for Crowned lemurs, to almost 12500 for Gray mouse lemurs. The number of Crowned lemurs is significantly lower than the other two species shown. The bars are coloured based on species."
ggplot(lemurs, 
       aes(x = name,
           y = n,
           fill = name)) +
  geom_col() +
  scale_fill_manual(
    values = c("#4C1E4F",
               "#7D70BA",
               "#D35269")
    )
```

# Choosing<br>colours {background-image="images/lemur_bg.png" width="50%"}

## How to define colours in R

::: columns
::: {.column}

<br>


* Hex code: `"#D35269"`

* RGB value: `rgb()`

* Colour names: `colors()`

There `r length(colors())` recognised colour names in R!

:::
::: {.column .fragment}

<br>
<p style="text-align:center;">
<img src="images/choose.gif" alt="Gif of cartoon lemur looking confused" width="80%">
</p>

:::
:::

## How to choose colours

* Brand guidelines

* Images

  * [imagecolorpicker.com](https://imagecolorpicker.com/en)
  * [{eyedroppeR}](https://github.com/doehm/eyedroppeR)
  
* Cara Thompson (R-Ladies Cambridge): [www.cararthompson.com/talks/rl-cambridge-beautifully-annotated](https://www.cararthompson.com/talks/rl-cambridge-beautifully-annotated/)

## Checking for colour blind friendliness

### {colorblindcheck}


```{r}
#| echo: true
#| eval: false
my_colours = c("#4C1E4F", "#7D70BA", "#D35269")
colorblindcheck::palette_check(my_colours, plot = TRUE)
```

```{r}
#| echo: false
#| eval: true
my_colours = c("#4C1E4F", "#7D70BA", "#D35269")
colorblindcheck::palette_check(my_colours)
```


## Checking for colour blind friendliness

### {colorblindcheck}

```{r}
#| echo: false
#| eval: true
#| fig-align: center
invisible(colorblindcheck::palette_check(my_colours, plot = TRUE))
```

## Checking for colour blind friendliness

### {colorblindr}

```{r}
#| eval: true
#| echo: false
theme_set(theme_grey(base_size = 20) + 
            theme(legend.position = "none", 
                  plot.background = element_rect(colour = "#dae5e7", fill = "#dae5e7"), 
                  panel.background = element_rect(colour = "#dae5e7", fill = "#dae5e7")))
```

```{r}
#| echo: false
lemur_plot <- ggplot(lemurs, 
       aes(x = name,
           y = n,
           fill = name)) +
  geom_col() +
  scale_fill_manual(
    values = c("#4C1E4F",
               "#7D70BA",
               "#D35269")
    )
```

```{r}
#| echo: true
#| eval: true
#| fig-align: center
#| fig-height: 4.5
colorblindr::cvd_grid(lemur_plot)
```

```{r}
#| echo: false
#| eval: true
theme_set(theme_grey(base_size = 40) + 
            theme(legend.position = "bottom", 
                  legend.title = element_blank(),
                  legend.text = element_text(lineheight = 0.6),
                  axis.title = element_blank(),
                  axis.ticks = element_blank(),
                  legend.background = element_rect(
                    colour = "#F0F5F5", fill = "#F0F5F5"),
                  plot.background = element_rect(
                    colour = "#F0F5F5", fill = "#F0F5F5"), 
                  panel.background = element_rect(
                    colour = "#F0F5F5", fill = "#F0F5F5")))
```

## Checking for colour blind friendliness

::: columns
::: {.column}

<br>

* Minimise the number of colours (no more than 8)

* Vary the luminosity of the colours

* Don't rely on colour: [{ggpattern}](https://coolbutuseless.github.io/package/ggpattern/)

:::
::: {.column .fragment}

```{r}
#| echo: false
#| eval: true
#| fig-width: 7
#| fig-height: 6
#| fig-alt: "A bar chart showing number of lemurs. On the x-axis three species of lemurs are shown including the Crowned lemur, Gray mouse lemur, and Ring-tailed lemur. On the y-axis the count of the number of each species is shown. The number of lemurs ranges from just under 2500 for Crowned lemurs, to almost 12500 for Gray mouse lemurs. The number of Crowned lemurs is significantly lower than the other two species shown. Bars are coloured by species, and bars are also filled with different patterns to highlight combined use of colour and pattern for accessibility."
#| code-line-numbers: "1,6,7"
library(ggpattern)
ggplot(lemurs, 
       aes(x = name,
           y = n, 
           fill = name,
           pattern = name)) +
  geom_col_pattern()
```

:::
:::

## Checking contrast

As well as checking colours are distinguishable from each other, we should also check they're distinct from the background.

* [webaim.org/resources/contrastchecker](https://webaim.org/resources/contrastchecker/)

* [coolors.co/contrast-checker](https://coolors.co/contrast-checker/112a46-acc8e5)

* [{savonliquide}](https://github.com/feddelegrand7/savonliquide)

# Custom<br>colour<br>scales {background-image="images/lemur_bg.png" width="50%"}

## Now we want to re-use these colours...

...so let's make a function!

First, let's define our colours in a list:

```{r}
#| echo: true
my_colours = list(
  my_favourite_colours = c("#4C1E4F", "#7D70BA", "#D35269")
)
```

## Turn colours into a palette

```{r}
#| echo: true
#| code-line-numbers: "10,11"
my_palettes = function(palette_name,
                       n,
                       type = c("discrete", "continuous")) {
  palette = my_colours[[palette_name]]
  if (missing(n)) {
    n = length(palette)
  }
  type = match.arg(type)
  out = switch(type,
               continuous = grDevices::colorRampPalette(palette)(n),
               discrete = palette[1:n]
  )
  structure(out, palette_name = palette_name, class = "palette")
}
```

. . . 

Check it works...

```{r}
#| echo: true
#| eval: false
my_palettes("my_favourite_colours", type = "discrete")
```

```{r}
#| echo: false
#| eval: true
my_palettes("my_favourite_colours", type = "discrete")[1:3]
```

## Make some scale functions

Discrete scales

```{r}
#| echo: true
scale_colour_mycols_d = function(palette_name, ...) {
  ggplot2::scale_colour_manual(
    values = my_palettes(palette_name, type = "discrete"), ...)
}

scale_fill_mycols_d = function(palette_name, ...) {
  ggplot2::scale_fill_manual(
    values = my_palettes(palette_name, type = "discrete"), ...)
}
```

## Make some scale functions

Continuous scales

```{r}
#| echo: true
scale_colour_mycols_c = function(palette_name, ...) {
  ggplot2::scale_colour_gradientn(
    colours = my_palettes(palette_name, type = "continuous"), ...)
}

scale_fill_mycols_c = function(palette_name, ...) {
  ggplot2::scale_fill_gradientn(
    colours = my_palettes(palette_name, type = "continuous"), ...)
}
```

. . . 

Use `colour` or `color`...

```{r}
#| echo: true
scale_color_mycols_d <- scale_colour_mycols_d
scale_color_mycols_c <- scale_colour_mycols_c
```

## See it in action

```{r}
#| output-location: column-fragment
#| echo: true
#| fig-width: 7
#| fig-height: 6
#| code-line-numbers: "6"
#| fig-alt: "A bar chart showing number of lemurs. On the x-axis three species of lemurs are shown including the Crowned lemur, Gray mouse lemur, and Ring-tailed lemur. On the y-axis the count of the number of each species is shown. The number of lemurs ranges from just under 2500 for Crowned lemurs, to almost 12500 for Gray mouse lemurs. The number of Crowned lemurs is significantly lower than the other two species shown. The bars are coloured based on species."
ggplot(lemurs, 
       aes(x = name,
           y = n,
           fill = name)) +
  geom_col() +
  scale_fill_mycols_d("my_favourite_colours")
```

## See it in action

```{r}
#| output-location: column-fragment
#| echo: true
#| fig-width: 7
#| fig-height: 6
#| code-line-numbers: "6,7,8"
#| fig-alt: "A bar chart showing number of lemurs. On the x-axis three species of lemurs are shown including the Crowned lemur, Gray mouse lemur, and Ring-tailed lemur. On the y-axis the count of the number of each species is shown. The number of lemurs ranges from just under 2500 for Crowned lemurs, to almost 12500 for Gray mouse lemurs. The number of Crowned lemurs is significantly lower than the other two species shown. The bars are coloured based on number of lemurs."
ggplot(lemurs, 
       aes(x = name,
           y = n,
           fill = n)) +
  geom_col() +
  scale_fill_mycols_c("my_favourite_colours", 
                      limits = c(0, 12500),
                      breaks = c(0, 12500))
```

# Next<br>steps! {background-image="images/lemur_bg.png" width="50%"}

## What to do next?

::: {.incremental}

* Define a `print()` method: [adv-r.hadley.nz/s3](https://adv-r.hadley.nz/s3.html)

* Make an R package: [r-pkgs.org](https://r-pkgs.org/)

* Make some matching theme functions: [bookdown.org/rdpeng/RProgDA/building-a-new-theme](https://bookdown.org/rdpeng/RProgDA/building-a-new-theme.html)

:::

## Slides

::: columns
::: {.column width="60%"}

Slides: [nrennie.rbind.io/talks/rladies-cambridge-ggplot2-colours](https://nrennie.rbind.io/talks/rladies-cambridge-ggplot2-colours/) <br><br><br>

Source code: [github.com/nrennie/R-Ladies/tree/main/RLadiesCambridge/2023-03-23](https://github.com/nrennie/R-Ladies/tree/main/RLadiesCambridge/2023-03-23)

:::

::: {.column width="40%"}

<br> 
<p style="text-align:center;">
<img src="images/ggplot2.svg" alt="ggplot2 hex logo" width="60%">
</p>

:::
:::


## Questions?

::: columns
::: {.column}

<br>

{{< fa globe >}} [nrennie.rbind.io](https://nrennie.rbind.io/)

{{< fa brands github >}} [nrennie](https://github.com/nrennie)

{{< fa brands twitter >}} [@nrennie35](https://twitter.com/nrennie35)

{{< fa brands mastodon >}} [fosstodon.org/@nrennie](https://fosstodon.org/@nrennie)

:::
::: {.column}

<p style="text-align:center;">
<img src="images/qr_code.png" alt="QR code which takes the user to the presenters website at nrennie.rbind.io" width="70%">
</p>

:::
:::

